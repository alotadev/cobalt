// Copyright 2016 The Fuchsia Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Interface for shuffler service between encoders and analyzers.
// Note: "If you change this file you must re-generate the shuffler.pb.go file
// and check it in also". Pls use the following command to regenerate the
// shuffler.pb.go file:
// 1. From the parent shuffler dir, run
//    'protoc -I service/ service/shuffler.proto  --go_out=plugins=grpc:proto'

syntax = "proto3";

package cobalt.shuffler;

option go_package = "shuffler";

import "encrypted_message.proto";

import "github.com/golang/protobuf/ptypes/empty/empty.proto";

// Interface exported by the Shuffler service.
service Shuffler {
  // Service that receives raw incoming messages from the encoder.
  rpc Process(Envelope) returns (google.protobuf.Empty) {}
}

// Recipient specifies analyzer's host and routing attributes for sending the
// shuffled messages.
message Recipient {
  string host_name = 1;
}

message Manifest {
  enum ShufflerPolicy {
    UNKNOWN_POLICY = 0;
    POLICY1 = 1;
    POLICY2 = 2; // TODO: Add some real policies here.
  }
  ShufflerPolicy shuffler_policy = 2;
  Recipient recipient = 3;
}

message Envelope {
  Manifest manifest = 1;
  EncryptedMessage encrypted_message = 2;
}
