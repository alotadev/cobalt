# Copyright 2019 The Fuchsia Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("$cobalt_root/metrics_registry.gni")

metrics_registry("all_report_types_test_registry") {
  customer_id = 1
  project_id = 1
  skip_validation = true
  for_testing = true
  source = "all_report_types_test_registry.yaml"
  namespace = "cobalt.logger.testing.all_report_types"
  var_name = "cobalt_registry_base64"

  generate_binarypb = false
  generate_cc = true
}

metrics_registry("mixed_time_zone_test_registry") {
  customer_id = 1
  project_id = 1
  skip_validation = true
  for_testing = true
  source = "mixed_time_zone_test_registry.yaml"
  namespace = "cobalt.logger.testing.mixed_time_zone"
  var_name = "cobalt_registry_base64"

  generate_binarypb = false
  generate_cc = true
}

metrics_registry("per_device_numeric_stats_test_registry") {
  customer_id = 1
  project_id = 1
  skip_validation = true
  for_testing = true
  source = "per_device_numeric_stats_test_registry.yaml"
  namespace = "cobalt.logger.testing.per_device_numeric_stats"
  var_name = "cobalt_registry_base64"

  generate_binarypb = false
  generate_cc = true
}

metrics_registry("per_device_histogram_test_registry") {
  customer_id = 1
  project_id = 1
  skip_validation = true
  for_testing = true
  source = "per_device_histogram_test_registry.yaml"
  namespace = "cobalt.logger.testing.per_device_histogram"
  var_name = "cobalt_registry_base64"

  generate_binarypb = false
  generate_cc = true
}

metrics_registry("unique_actives_test_registry") {
  customer_id = 1
  project_id = 1
  skip_validation = true
  for_testing = true
  source = "unique_actives_test_registry.yaml"
  namespace = "cobalt.logger.testing.unique_actives"
  var_name = "cobalt_registry_base64"

  generate_binarypb = false
  generate_cc = true
}

metrics_registry("unique_actives_noise_free_test_registry") {
  customer_id = 1
  project_id = 1
  skip_validation = true
  for_testing = true
  source = "unique_actives_noise_free_test_registry.yaml"
  namespace = "cobalt.logger.testing.unique_actives_noise_free"
  var_name = "cobalt_registry_base64"

  generate_binarypb = false
  generate_cc = true
}

metrics_registry("encoder_test_registry") {
  customer_id = 1
  project_id = 1
  skip_validation = true
  for_testing = true
  source = "encoder_test_registry.yaml"
  namespace = "cobalt.logger"
  var_name = "cobalt_registry_base64"

  generate_binarypb = false
  generate_cc = true
}

metrics_registry("project_context_test_registry") {
  global = true
  skip_validation = true
  for_testing = true
  directories = [ "project_context_test_registry" ]
  namespace = "cobalt.logger"
  var_name = "cobalt_registry_base64"

  generate_binarypb = false
  generate_cc = true
}

metrics_registry("multiple_project_context_test_registry_directories") {
  global = true
  skip_validation = true
  for_testing = true
  directories = [
    "project_context_factory_test_registry",
    "project_context_test_registry",
  ]
  namespace = "cobalt.logger"
  var_name = "cobalt_registry_base64"

  generate_binarypb = false
  generate_cc = true
}

metrics_registry("empty_test_registry") {
  global = true
  allow_empty_output = true
  skip_validation = true
  for_testing = true
  directories = [ "empty_test_registry" ]
  namespace = "cobalt.logger"
  var_name = "cobalt_registry_base64"

  generate_binarypb = true
}
