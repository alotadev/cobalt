// Copyright 2016 The Fuchsia Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

import "encrypted_message.proto";
import "google/protobuf/empty.proto";

package cobalt.analyzer;

option go_package = "cobalt";

// A batch of encrypted Observations received from the Shuffler.
message ObservationBatch {
  // The common Metadata for all of the encrypted observations in this batch.
  //
  // This field is authenticated by virtue of being included in the
  // "associated data" part of the AEAD encryption of each
  // |encryped_observation|.
  ObservationMetadata meta_data = 1;

  // A batch of encrypted observations with common metadata.
  repeated EncryptedMessage encrypted_observation = 2;
}

// The Analyzer receives observations from the shufflers.  Reports based on
// these observations are periodically generated and published.
service Analyzer {
  // Shuffler -> Analyzer RPC
  rpc AddObservations (ObservationBatch) returns (google.protobuf.Empty) {}
}
