// Copyright 2016 The Fuchsia Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//    http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

package cobalt;

option go_package = "shuffler";

// An EncryptedMessage sits inside of an |Envelope|. If the intended recipient
// is the Analyzer then |ciphertext| contains the encryption of the standard
// serialization of an |Observations| using the Analyzer's public key, and the
// Shuffler cannot decrypt it. If the intended recipient is the Shuffler then
// |ciphertext| contains the encryption of the standard serialization of
// another |Envelope| using the Shuffler's public key and the Shuffler can
// decrypt it.
message EncryptedMessage {
  enum EncryptionScheme {
    UNKNOWN_SCHEME = 0;
    ENVELOPE_1 = 1;
  }
  EncryptionScheme scheme = 1;
  string pub_key = 2;   // Fingerprint (SHA256) of the recipientâ€™s key. This is
                        // used for key rotation.
  bytes ciphertext = 3; // Encrypted Envelope or Observations
}
